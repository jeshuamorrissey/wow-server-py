from pony import orm

from database.constants import common
from database.db import db


class Spell(db.Entity):
    id = orm.PrimaryKey(int)
    school_mask = orm.Required(int, unsigned=True)
    category = orm.Required(int, unsigned=True)
    cast_ui = orm.Required(int)
    dispel = orm.Required(int, unsigned=True)
    mechanic = orm.Required(int, unsigned=True)
    attributes = orm.Required(int, unsigned=True)
    attributes_ex = orm.Required(int, unsigned=True)
    attributes_ex2 = orm.Required(int, unsigned=True)
    attributes_ex3 = orm.Required(int, unsigned=True)
    attributes_ex4 = orm.Required(int, unsigned=True)
    shapeshift_mask = orm.Required(int, unsigned=True)
    shapeshift_exclude = orm.Required(int, unsigned=True)
    targets = orm.Required(int, unsigned=True)
    target_creature_type = orm.Required(int, unsigned=True)
    requires_spell_focus = orm.Required(int, unsigned=True)
    caster_aura_state = orm.Required(int, unsigned=True)
    target_aura_state = orm.Required(int, unsigned=True)
    casting_time_index = orm.Required(int, unsigned=True)
    recovery_time = orm.Required(int, unsigned=True)
    category_recovery_time = orm.Required(int, unsigned=True)
    interrupt_flags = orm.Required(int, unsigned=True)
    aura_interrupt_flags = orm.Required(int, unsigned=True)
    channel_interrupt_flags = orm.Required(int, unsigned=True)
    proc_flags = orm.Required(int, unsigned=True)
    proc_chance = orm.Required(int, unsigned=True)
    proc_charges = orm.Required(int, unsigned=True)
    maximum_level = orm.Required(int, unsigned=True)
    base_level = orm.Required(int, unsigned=True)
    spell_level = orm.Required(int, unsigned=True)
    duration_index = orm.Required(int, unsigned=True)
    power_type = orm.Required(int, unsigned=True)
    mana_cost = orm.Required(int, unsigned=True)
    mana_cost_per_level = orm.Required(int, unsigned=True)
    mana_per_second = orm.Required(int, unsigned=True)
    mana_per_second_per_level = orm.Required(int, unsigned=True)
    range_index = orm.Required(int, unsigned=True)
    speed = orm.Required(int, unsigned=True)
    modal_next_spell = orm.Required(int, unsigned=True)
    stack_amount = orm.Required(int, unsigned=True)
    totem1 = orm.Required(int, unsigned=True)
    totem2 = orm.Required(int, unsigned=True)
    reagent1 = orm.Required(int)
    reagent2 = orm.Required(int)
    reagent3 = orm.Required(int)
    reagent4 = orm.Required(int)
    reagent5 = orm.Required(int)
    reagent6 = orm.Required(int)
    reagent7 = orm.Required(int)
    reagent8 = orm.Required(int)
    reagent_count1 = orm.Required(int, unsigned=True)
    reagent_count2 = orm.Required(int, unsigned=True)
    reagent_count3 = orm.Required(int, unsigned=True)
    reagent_count4 = orm.Required(int, unsigned=True)
    reagent_count5 = orm.Required(int, unsigned=True)
    reagent_count6 = orm.Required(int, unsigned=True)
    reagent_count7 = orm.Required(int, unsigned=True)
    reagent_count8 = orm.Required(int, unsigned=True)
    equipped_item_class = orm.Required(int, unsigned=True)
    equipped_item_sub_class_mask = orm.Required(int, unsigned=True)
    equipped_item_inventory_type_mask = orm.Required(int, unsigned=True)
    effect1 = orm.Required(int, unsigned=True)
    effect2 = orm.Required(int, unsigned=True)
    effect3 = orm.Required(int, unsigned=True)
    effect_die_sides1 = orm.Required(int, unsigned=True)
    effect_die_sides2 = orm.Required(int, unsigned=True)
    effect_die_sides3 = orm.Required(int, unsigned=True)
    effect_base_dice1 = orm.Required(int)
    effect_base_dice2 = orm.Required(int)
    effect_base_dice3 = orm.Required(int)
    effect_dice_per_level1 = orm.Required(int)
    effect_dice_per_level2 = orm.Required(int)
    effect_dice_per_level3 = orm.Required(int)
    effect_real_points_per_level1 = orm.Required(int, unsigned=True)
    effect_real_points_per_level2 = orm.Required(int, unsigned=True)
    effect_real_points_per_level3 = orm.Required(int, unsigned=True)
    effect_base_points1 = orm.Required(int, unsigned=True)
    effect_base_points2 = orm.Required(int, unsigned=True)
    effect_base_points3 = orm.Required(int, unsigned=True)
    effect_mechanic1 = orm.Required(int, unsigned=True)
    effect_mechanic2 = orm.Required(int, unsigned=True)
    effect_mechanic3 = orm.Required(int, unsigned=True)
    effect_implicit_target_a1 = orm.Required(int, unsigned=True)
    effect_implicit_target_a2 = orm.Required(int, unsigned=True)
    effect_implicit_target_a3 = orm.Required(int, unsigned=True)
    effect_implicit_target_b1 = orm.Required(int, unsigned=True)
    effect_implicit_target_b2 = orm.Required(int, unsigned=True)
    effect_implicit_target_b3 = orm.Required(int, unsigned=True)
    effect_radius_index1 = orm.Required(int, unsigned=True)
    effect_radius_index2 = orm.Required(int, unsigned=True)
    effect_radius_index3 = orm.Required(int, unsigned=True)
    effect_apply_aura_name1 = orm.Required(int, unsigned=True)
    effect_apply_aura_name2 = orm.Required(int, unsigned=True)
    effect_apply_aura_name3 = orm.Required(int, unsigned=True)
    effect_amplitude1 = orm.Required(int, unsigned=True)
    effect_amplitude2 = orm.Required(int, unsigned=True)
    effect_amplitude3 = orm.Required(int, unsigned=True)
    effect_multiple_value1 = orm.Required(float)
    effect_multiple_value2 = orm.Required(float)
    effect_multiple_value3 = orm.Required(float)
    effect_chain_target1 = orm.Required(int, unsigned=True)
    effect_chain_target2 = orm.Required(int, unsigned=True)
    effect_chain_target3 = orm.Required(int, unsigned=True)
    effect_item_type1 = orm.Required(int, unsigned=True)
    effect_item_type2 = orm.Required(int, unsigned=True)
    effect_item_type3 = orm.Required(int, unsigned=True)
    effect_misc_value1 = orm.Required(int, unsigned=True)
    effect_misc_value2 = orm.Required(int, unsigned=True)
    effect_misc_value3 = orm.Required(int, unsigned=True)
    effect_trigger_spell1 = orm.Required(int, unsigned=True)
    effect_trigger_spell2 = orm.Required(int, unsigned=True)
    effect_trigger_spell3 = orm.Required(int, unsigned=True)
    effect_points_per_combo_point1 = orm.Required(float)
    effect_points_per_combo_point2 = orm.Required(float)
    effect_points_per_combo_point3 = orm.Required(float)
    spell_visual1 = orm.Required(int, unsigned=True)
    spell_visual2 = orm.Required(int, unsigned=True)
    spell_icon_id = orm.Required(int, unsigned=True)
    active_icon_id = orm.Required(int, unsigned=True)
    spell_priority = orm.Required(int, unsigned=True)
    spell_name = orm.Required(common.MultiString)
    spell_rank = orm.Optional(common.MultiString)
    spell_description = orm.Optional(common.MultiString)
    spell_tool_tip = orm.Optional(common.MultiString)
    mana_cost_percentage = orm.Required(int, unsigned=True)
    start_recovery_category = orm.Required(int, unsigned=True)
    start_recovery_time = orm.Required(int, unsigned=True)
    maximum_target_level = orm.Required(int, unsigned=True)
    spell_class_set = orm.Required(int, unsigned=True)
    spell_class_mask1 = orm.Required(int, unsigned=True)
    spell_class_mask2 = orm.Required(int, unsigned=True)
    maximum_affected_targets = orm.Required(int, unsigned=True)
    damage_class = orm.Required(int, unsigned=True)
    prevention_type = orm.Required(int, unsigned=True)
    stance_bar_order = orm.Required(int, unsigned=True)
    effect_damage_multiplier1 = orm.Required(float)
    effect_damage_multiplier2 = orm.Required(float)
    effect_damage_multiplier3 = orm.Required(float)
    minimum_faction_id = orm.Required(int, unsigned=True)
    minimum_reputation = orm.Required(int, unsigned=True)
    required_aura_vision = orm.Required(int, unsigned=True)

    chr_races_login_effect_backlink = orm.Set('ChrRaces',
                                              reverse='login_effect')
    chr_races_combat_stun_backlink = orm.Set('ChrRaces', reverse='combat_stun')
    chr_races_res_sickness_backlink = orm.Set('ChrRaces',
                                              reverse='res_sickness')
    aura_base_spell_backlink = orm.Set('Aura', reverse='base_spell')
    unit_created_by_backlink = orm.Set('Unit', reverse='created_by_spell')
    unit_channeling_backlink = orm.Set('Unit', reverse='channeling_spell')
    player_spells_backlink = orm.Set('PlayerSpell')
